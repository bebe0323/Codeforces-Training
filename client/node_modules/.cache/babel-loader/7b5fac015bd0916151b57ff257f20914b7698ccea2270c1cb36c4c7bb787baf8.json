{"ast":null,"code":"var _jsxFileName = \"/import/kamen/7/z5458085/Documents/Codeforces-Training/client/src/problemList/TodoList.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default async function TodoList() {\n  _s();\n  const {\n    userInfo,\n    setUserInfo\n  } = useContext(UserContext);\n  let problemList = [];\n  const response = await fetch('http://localhost:4000/todoList', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include'\n  });\n  if (response.status === 200) {\n    response.json().then(data => {\n      problemList = data;\n    });\n  } else {\n    response.json().then(data => alert(data));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"6KcvlYVOPvqPiK+f1kw2cpvm0qY=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useContext","UserContext","jsxDEV","_jsxDEV","TodoList","_s","userInfo","setUserInfo","problemList","response","fetch","method","headers","credentials","status","json","then","data","alert","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/import/kamen/7/z5458085/Documents/Codeforces-Training/client/src/problemList/TodoList.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { UserContext } from \"../UserContext\";\n\nexport default async function TodoList() {\n  const { userInfo, setUserInfo } = useContext(UserContext);\n  let problemList = [];\n  const response = await fetch('http://localhost:4000/todoList', {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n  });\n  if (response.status === 200) {\n    response.json()\n      .then(data => {\n        problemList = data;\n      })\n  } else {\n    response.json()\n      .then(data => alert(data))\n  }\n  return (\n    <div>\n\n    </div>\n  )\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,eAAeC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGP,UAAU,CAACC,WAAW,CAAC;EACzD,IAAIO,WAAW,GAAG,EAAE;EACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;IAC7DC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;IAC3BL,QAAQ,CAACM,IAAI,CAAC,CAAC,CACZC,IAAI,CAACC,IAAI,IAAI;MACZT,WAAW,GAAGS,IAAI;IACpB,CAAC,CAAC;EACN,CAAC,MAAM;IACLR,QAAQ,CAACM,IAAI,CAAC,CAAC,CACZC,IAAI,CAACC,IAAI,IAAIC,KAAK,CAACD,IAAI,CAAC,CAAC;EAC9B;EACA,oBACEd,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACjB,EAAA,CAtB6BD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}