{"ast":null,"code":"var _jsxFileName = \"/import/kamen/7/z5458085/Documents/Codeforces-Training/client/src/problemList/TodoList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  const [problemList, setProblemList] = useState(null);\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     try {\n  //       const response = await fetch('http://localhost:4000/todoList', {\n  //         method: 'GET',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         credentials: 'include',\n  //       });\n  //       console.log(response);\n  //       if (response.status === 200) {\n  //         response.json()\n  //           .then(data => {\n  //             setProblemList(data);\n  //           })\n  //       } else {\n  //         response.json()\n  //           .then(data => alert(data))\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching data: ', error);\n  //     }\n  //   }\n  //   fetchData();\n  // }, []);\n  // if (problemList === null) {\n  //   return (\n  //     <>\n  //       Loading\n  //     </>\n  //   )\n  // } else {\n  //   return (\n  //     <>problem list</>\n  //   )\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"todo List\", problemList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"problem list\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading\"\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"zTtJ5s4wbxAdTB/ZUdAL8SA9QFc=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","TodoList","_s","problemList","setProblemList","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/import/kamen/7/z5458085/Documents/Codeforces-Training/client/src/problemList/TodoList.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function TodoList() {\n  const [problemList, setProblemList] = useState(null);\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     try {\n  //       const response = await fetch('http://localhost:4000/todoList', {\n  //         method: 'GET',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         credentials: 'include',\n  //       });\n  //       console.log(response);\n  //       if (response.status === 200) {\n  //         response.json()\n  //           .then(data => {\n  //             setProblemList(data);\n  //           })\n  //       } else {\n  //         response.json()\n  //           .then(data => alert(data))\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching data: ', error);\n  //     }\n  //   }\n  //   fetchData();\n  // }, []);\n  // if (problemList === null) {\n  //   return (\n  //     <>\n  //       Loading\n  //     </>\n  //   )\n  // } else {\n  //   return (\n  //     <>problem list</>\n  //   )\n  // }\n  return (\n    <div>\n      todo List\n      {problemList\n        ? <>problem list</>\n        : <>Loading</>\n      }\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEI,OAAA;IAAAK,QAAA,GAAK,WAEH,EAACF,WAAW,gBACRH,OAAA,CAAAF,SAAA;MAAAO,QAAA,EAAE;IAAY,gBAAE,CAAC,gBACjBL,OAAA,CAAAF,SAAA;MAAAO,QAAA,EAAE;IAAO,gBAAE,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEb,CAAC;AAEV;AAACP,EAAA,CA9CuBD,QAAQ;AAAAS,EAAA,GAART,QAAQ;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}