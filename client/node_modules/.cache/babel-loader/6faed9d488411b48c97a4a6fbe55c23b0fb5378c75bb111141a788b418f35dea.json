{"ast":null,"code":"var _jsxFileName = \"/import/kamen/7/z5458085/Documents/Codeforces-Training/client/src/pages/AddProblemPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddProblemPage() {\n  _s();\n  const [link, setLink] = useState('');\n  async function handleProblemAdd(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/problemAdd', {\n      method: 'POST',\n      body: JSON.stringify({\n        link\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.status === 200) {\n      alert('successfully added');\n      setLink('');\n    } else {\n      response.json().then(data => alert(data));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Problem link\",\n        value: link,\n        onChange: e => {\n          setLink(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Problem link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleProblemAdd,\n        variant: \"warning\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(AddProblemPage, \"utLFTpQW0ewAu1rNJ9arQcXJ2to=\");\n_c = AddProblemPage;\nvar _c;\n$RefreshReg$(_c, \"AddProblemPage\");","map":{"version":3,"names":["useState","Button","Form","jsxDEV","_jsxDEV","AddProblemPage","_s","link","setLink","handleProblemAdd","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","status","alert","json","then","data","children","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","onClick","variant","_c","$RefreshReg$"],"sources":["/import/kamen/7/z5458085/Documents/Codeforces-Training/client/src/pages/AddProblemPage.js"],"sourcesContent":["import { useState} from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nexport default function AddProblemPage() {\n  const [link, setLink] = useState('');\n  async function handleProblemAdd(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:4000/problemAdd', {\n      method: 'POST',\n      body: JSON.stringify({ link }),\n      headers: { 'Content-Type': 'application/json' },\n      credentials: 'include',\n    });\n    if (response.status === 200) {\n      alert('successfully added');\n      setLink('');\n    } else {\n      response.json()\n        .then(data => alert(data))\n    }\n  }\n\n  return (\n    <div>\n      <form >\n        <input\n          placeholder=\"Problem link\"\n          value={link}\n          onChange={(e) => {\n            setLink(e.target.value);\n          }}\n        />\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Problem link\"\n        />\n        <Button onClick={handleProblemAdd} variant=\"warning\">Add</Button>{' '}\n      </form>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAO,OAAO;AAC/B,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,eAAeS,gBAAgBA,CAACC,CAAC,EAAE;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV;MAAK,CAAC,CAAC;MAC9BW,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,WAAW,EAAE;IACf,CAAC,CAAC;IACF,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MAC3BC,KAAK,CAAC,oBAAoB,CAAC;MAC3Bb,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,MAAM;MACLI,QAAQ,CAACU,IAAI,CAAC,CAAC,CACZC,IAAI,CAACC,IAAI,IAAIH,KAAK,CAACG,IAAI,CAAC,CAAC;IAC9B;EACF;EAEA,oBACEpB,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QACEsB,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAEpB,IAAK;QACZqB,QAAQ,EAAGlB,CAAC,IAAK;UACfF,OAAO,CAACE,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAC;QACzB;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF7B,OAAA,CAACF,IAAI,CAACgC,OAAO;QACXC,IAAI,EAAC,MAAM;QACXT,WAAW,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACF7B,OAAA,CAACH,MAAM;QAACmC,OAAO,EAAE3B,gBAAiB;QAAC4B,OAAO,EAAC,SAAS;QAAAZ,QAAA,EAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC3B,EAAA,CArCuBD,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}